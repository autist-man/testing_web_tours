define({"1656":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_play.htm",l:-1,t:"web_stream_play",i:0.00123538978712876,a:"Starts playing a media stream. C Language int web_stream_play( \"ID=\u003cn\u003e\", \"PlayingDuration=\u003cseconds\u003e\", [\"Speed=\u003cn\u003e\",] LAST );  Return Values This function returns LR_PASS (0) on success, and LR_FAIL (1) on failure.  Parameterization Standard parameterization is not available for this function. ..."},"1657":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_seek.htm",l:-1,t:"web_stream_seek",i:0.000472382009097403,a:"Sets the position in a stream. C Language int web_stream_seek( \"ID=\u003cn\u003e\", \"TimeOffset=\u003cseconds\u003e\" ] | [\"RelativeOffset=\u003c+/- seconds\u003e\"], LAST );  Return Values This function returns LR_PASS (0) on success, and LR_FAIL (1) on failure. If the live stream does not support seek, returns LR_FAIL.  ..."},"1658":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_set_param_double.htm",l:-1,t:"web_stream_set_param_double",i:0.000472382009097403,a:"Sets the value of a stream parameter. C Language int web_stream_set_param_double( const char *StreamID, const int StateType, const double StateValue );  Return Values This function returns LR_PASS (0) on success, and LR_FAIL (1) on failure.  Parameterization Standard parameterization is not ..."},"1659":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_set_param_int.htm",l:-1,t:"web_stream_set_param_int",i:0.000472382009097403,a:"Sets the value of a stream parameter. C Language int web_stream_set_param_int( const char *ID, const int StateType, const int StateValue );  Return Values This function returns LR_PASS (0) on success, and LR_FAIL (1) on failure.  Parameterization Standard parameterization is not available for this ..."},"1660":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_stop.htm",l:-1,t:"web_stream_stop",i:0.000472382009097403,a:"Stops playing a media stream and sets the stream pointer back to the beginning. C Language int web_stream_stop( \"ID=\u003cn\u003e\",  LAST );  Return Values This function returns LR_PASS (0) on success, and LR_FAIL (1) on failure.  Parameterization Standard parameterization is not available for this function. ..."},"1661":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_wait.htm",l:-1,t:"web_stream_wait",i:0.000472382009097403,a:"Suspends script execution during stream download until download condition reached. C Language int web_stream_wait( \"ID=\u003cn\u003e\",[\"StreamingDuration=\u003cseconds\u003e\"]  [\"Percentage=\u003c0-100\u003e\"],  LAST );  Return Values This function returns LR_PASS (0) on success, and LR_FAIL (1) on failure.  Parameterization ..."},"1662":{y:0,u:"../Content/FuncRef/web/lrFr_web_submit_data.htm",l:-1,t:"web_submit_data",i:0.000401980376076918,a:"Performs an \"unconditional\" or \"contextless\" form submission.  C Language int web_submit_data( const char *StepName, const char *Action, \u003cList of Attributes\u003e, ITEMDATA, \u003cList of data\u003e, [ EXTRARES, \u003cList of Resource Attributes\u003e,] LAST );  Java Language int object.submit_data( String stepName, String ..."},"1663":{y:0,u:"../Content/FuncRef/web/lrFr_web_submit_form.htm",l:-1,t:"web_submit_form",i:0.000354701192156331,a:"Submits a form. C Language int web_submit_form( const char *StepName, \u003cList of Attributes\u003e, \u003cList of Hidden Fields\u003e, ITEMDATA, \u003cList of Data Fields\u003e, [ EXTRARES, \u003cList of Resource Attributes\u003e,] LAST ); Java Language int object.submit_form( String stepName, String[] options, String[] data );  ..."},"1664":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_sync.htm",l:-1,t:"web_sync",i:0.00020200722850034,a:"web_sync"},"1665":{y:0,u:"../Content/FuncRef/web/lrFr_web_url.htm",l:-1,t:"web_url",i:0.000422611948166214,a:"web_url Loads the specified web page (GET request). C Language int web_url( const char *StepName, const char *url, \u003cList of Attributes\u003e, [EXTRARES, \u003cList of Resource Attributes\u003e,] LAST );"},"1666":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_util_set_formattedRqustBdy.htm",l:-1,t:"web_util_set_formatted_request_body",i:0.000312621037955945,a:"web_util_set_formatted_request_body"},"1667":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_util_set_request_body.htm",l:-1,t:"web_util_set_request_body",i:0.000262349325009287,a:"web_util_set_request_body"},"1668":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_util_set_request_url.htm",l:-1,t:"web_util_set_request_url",i:0.000262349325009287,a:"web_util_set_request_url"},"1669":{y:0,u:"../Content/FuncRef/web/lrFr_web_websocket_close.htm",l:-1,t:"web_websocket_close",i:0.000225195551445611,a:"Closes a WebSocket connection.  C Language  int web_websocket_close(\"ID=connection ID\", [\"Code=\u003c4_digit_ code\u003e\",] [ \"Reason=\u003creason for closure\u003e\",] LAST); ID The ID of the connection to close.\t\t\t\t\t Code The WebSocket connection close code. This can be an integer ranging from 1000 to 1011.  Reason A ..."},"1670":{y:0,u:"../Content/FuncRef/web/lrFr_web_websocket_connect.htm",l:-1,t:"web_websocket_connect",i:0.000225195551445611,a:"Creates a WebSocket connection. C Language  int web_websocket_connect(\"ID=conection_id\", \"URI=ws://server:port\", [\"Origin=value \", SecWebSocketKey=value \",    \"SecWebSocketProtocol=value \", SecWebSocketExtensions=value, OnOpenCB=func_name, OnMessageCB=func_name, OnErrorCB=func_name, ..."},"1671":{y:0,u:"../Content/FuncRef/web/lrFr_web_websocket_send.htm",l:-1,t:"web_websocket_send",i:0.000225195551445611,a:"Sends a message over a WebSocket connection. C Language  int web_websocket_send(\"ID=connection ID\", [\"Buffer=message_Text\",] [\"Buffer/BIN=message_Text\",]  [\"Buffer/File=file\",] \"IsBinary=0/1\", LAST); ID The ID of the connection over which to send the message.\t\t\t\t Buffer The string to send to the ..."},"1672":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_C_Lang_Funcs.htm",l:-1,t:"Web Vuser Functions: C Language",i:0.000197258141728021,a:"HTTP-related functions have a web prefix.  See: Action Functions Authentication Functions Asynchronous Functions - C  Check Functions Connection Definition Functions Concurrent Group Functions - C Language Cookie Functions Correlation Functions for C Data Format Functions Filter Functions Header ..."},"1673":{y:0,u:"../Content/FuncRef/web/categories/lrFr_webCat_Action_Funcs.htm",l:-1,t:"Action Functions",i:0.00103092080893577,a:"Action Functions Click one of the following functions for more information: "},"1674":{y:0,u:"../Content/FuncRef/web/async/lrFuncRef_WBCAT_async_Funcs.htm",l:-1,t:"Asynchronous Functions - C ",i:0.000784486605315637,a:"Asynchronous Functions - C  Click one of the following functions for more information:  Callbacks"},"1675":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_concepts_Async_intro.htm",l:-1,t:"Asynchronous Support-C Language Web",i:0.000132341366777373,a:"Asynchronous support in Web Transport  supports testing of asynchronous behavior in web applications. The following asynchronous behaviors are supported: Push – client waits for input from server. Poll – client polls server periodically for information. Long poll – client polls server and waits for ..."},"1676":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_Asynchronous_Patterns.htm",l:-1,t:"Asynchronous Conversation Patterns",i:0.000159146260740457,a:"Asynchronous Conversation Patterns are of one of the following types: Poll - The client polls the server periodically for information. Long Poll - The client polls the server and waits for a response. When the response arrives, another poll request is initiated. Push - The client sends a request. ..."},"1677":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_AsyncID.htm",l:-1,t:"Conversation ID",i:0.000132341366777373,a:"A Conversation ID identifies a single  Asynchronous Conversation  across different steps. A Conversation ID must be unique throughout the entire Vuser script. Restrictions on Conversation IDs: cannot be an empty string cannot start with an  underscore cannot contain leading or trailing white spaces ..."},"1678":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Authen_Funcs.htm",l:-1,t:"Authentication Functions",i:0.000314829014416344,a:"Authentication Functions Click one of the following functions for more information: "},"1679":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Check_Funcs.htm",l:-1,t:"Check Functions",i:0.000481712789254162,a:"Check Functions The following functions may be used in a web script. VuGen does not record these functions. You must either manually program them into the script, or use the VuGen user interface to generate the functions. Click one of the following functions for more information: "},"1680":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Conc_Group_Funcs.htm",l:-1,t:"Concurrent Group Functions - C Language",i:0.000339101720622628,a:"Click one of the following functions for more information:  The following functions can be used within a concurrent group: web_url web_submit_data web_custom_request web_create_html_param web_reg_save_param web_reg_save_param_ex web_reg_save_param_regexp web_reg_save_param_xpath web_add_header"},"1681":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Conn_Def_Funcs.htm",l:-1,t:"Connection Definition Functions",i:0.000257270040527145,a:"Connection Definition Functions Click one of the following functions for more information: "},"1682":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Cookie_Funcs.htm",l:-1,t:"Cookie Functions",i:0.000584749945389643,a:"Cookie Functions Click one of the following functions for more information: "},"1683":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Corr_Funcs.htm",l:-1,t:"Correlation Functions for C",i:0.00062660846269781,a:"Correlation Functions for C Click one of the following functions for more information:   See also:  Correlation Functions for Java Correlation Functions for JavaScript"},"1684":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Data_Frmt_Funcs.htm",l:-1,t:"Data Format Functions",i:0.000222578469293237,a:"Data Format Functions Click one of the following functions for more information: "},"1685":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Filter_Funcs.htm",l:-1,t:"Filter Functions",i:0.000405960359695796,a:"Filter Functions Click one of the following functions for more information: "},"1686":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Header_Funcs.htm",l:-1,t:"Header Functions",i:0.000488306404384998,a:"Header Functions Click one of the following functions for more information: "},"1687":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Misc_Funcs.htm",l:-1,t:"Miscellaneous Functions",i:0.00151581309306062,a:"Miscellaneous Functions Click one of the following functions for more information: "},"1688":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Prxy_Srvr_Funcs.htm",l:-1,t:"Proxy Server Functions",i:0.000415778476664194,a:"Proxy Server Functions Click one of the following functions for more information: "},"1689":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Replay_Funcs.htm",l:-1,t:"Replay Functions",i:0.000356227221772281,a:"Replay Functions Click one of the following functions for more information: "},"1690":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Service_Funcs.htm",l:-1,t:"Service Functions",i:0.000803557980397449,a:"Service functions perform a task, manipulate, or analyze the data that was received from the server. Many of the tasks done by the service functions can be set by using the Runtime settings. Advanced users can use the service functions to change settings from inside a script.  Service functions are ..."},"1691":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_Stream_Funcs.htm",l:-1,t:"Stream Functions",i:0.00286939516484076,a:"Stream Functions Click one of the following functions for more information: "},"1692":{y:0,u:"../Content/FuncRef/web/etc/lrFr_AttsForSaveParamRegFuncts.htm",l:-1,t:"Attributes for Save Parameter Registration Functions",i:0.00033715833431681,a:"DFES: Comma separated list of Data Formats Extensions that are to be used before the required search operation is to be performed. Optional. If you use DFEs on a 64 bit Linux system, ensure that the 32-bit version of keyutils-libs.so (keyutils-libs.i686) is installed. NOTFOUND: The handling option ..."},"1693":{y:0,u:"../Content/FuncRef/web/etc/lrFr_entering_binary_code.htm",l:-1,t:"Entering Binary Code",i:0.000171591475504561,a:"You can use the following format to include binary code in arguments that support binary values: \\x[char1][char2] This represents the hexadecimal value that is represented by [char1][char2]. For example: \\x24 is 16*2+4=36, which is a $ sign; \\x2B is + sign. Sequences that do not represent valid ..."},"1694":{y:0,u:"../Content/FuncRef/web/etc/lrFuncRef_WVF_Concurrent_Groups.htm",l:-1,t:"Concurrent Groups",i:0.000468713604907687,a:"A Concurrent Group is a section of a script in which all functions are executed concurrently. The  web_concurrent_start  function marks the beginning of a concurrent group. The end of the group is marked by the  web_concurrent_end  function. Within the Concurrent group, you may include Action ..."},"1695":{y:0,u:"../Content/FuncRef/web/etc/lrFr_Correlating_HTML_sttmnts.htm",l:-1,t:"Correlating HTML statements",i:0.00019968863225703,a:"The main steps in correlating HTML statements in a web script are: In the script, identify the first statement that contains dynamic data. Find the web page that contains the HTML code for the dynamic data. Analyze the HTML code to find a pattern that characterizes the boundaries of the dynamic ..."},"1696":{y:0,u:"../Content/FuncRef/web/etc/lrFr_web_ErrorHandling.htm",l:-1,t:"Error Handling",i:0.00017547472869004,a:"You can specify how to handle errors during script execution. By default, when the script detects an error, it exits. To continue script execution, even when errors occur, select the Continue on Error check box in VuGen\u0027s General runtime settings. To control error handling for a specific segment of ..."},"1697":{y:0,u:"../Content/FuncRef/web/etc/lrFuncRef_WVF_Implicit_Headers.htm",l:-1,t:"Implicit Headers",i:0.000262912044442812,a:"Explicit automatic headers are the HTTP headers generated as a result of the web_add_auto_header function. When you specify the header using the web_add_auto_header, it is generated for all  Action Functions  that follow. Implicit automatic headers are generated by the replay, unaffected by a call ..."},"1698":{y:0,u:"../Content/FuncRef/web/etc/lrFuncRef_WVF_Lst_Resrce_Atts.htm",l:-1,t:"List of Resource Attributes",i:0.000307294377847434,a:"A list of resources generated by non–HTML mechanisms in the web page. These include the resources requested by Javascript, ActiveX, Java applets and Flash. VuGen\u0027s Recording Options allow these elements either to be recorded within the current script step (the default mode) or recorded as separate ..."},"1699":{y:0,u:"../Content/LR_JsonPath.htm",l:-1,t:"LoadRunner JsonPath",i:0.000132341366777373,a:"LoadRunner JsonPath is based on Stefan Goessner’s JsonPath implementation (e1, e2, e3), and includes additional support for: multiple filters combined with logical operators \u0026\u0026 and || regular expressions In this topic: /* */ JsonPath expressions JsonPath expressions always refer to a JSON structure, ..."},"1700":{y:0,u:"../Content/FuncRef/web/etc/lrFuncRef_WVF_Proxy_Server.htm",l:-1,t:"Proxy Server",i:0.000169166759782183,a:"A proxy server is an interface between your browser and the destination server. The proxy server takes your page request and handles the connection to the destination for your browser. Proxy servers are also able to cache pages. If a proxy is configured to cache, it first looks for the requested ..."},"1701":{y:0,u:"../Content/FuncRef/web/etc/lrFuncRef_WVF_Recording_Level_Mode.htm",l:-1,t:"Recording Level / Mode (Web)",i:0.000255695281143304,a:"The Recording Level or Mode for web scripts can be one of these values: HTML level: Instructs VuGen to record HTML actions intuitively, in the context of the current web page. The actions are recorded as URL steps (web_url), link steps (web_link), image steps (web_image), and form submission steps ..."},"1702":{y:0,u:"../Content/FuncRef/web/etc/lrFr_web_regular_expessions.htm",l:-1,t:"Regular Expressions",i:0.000191671554665991,a:"In some cases, you can use regular expressions to increase the flexibility and adaptability of your Vuser scripts.  Regular expressions can be used in functions: lr_xml_find\n\t\t\t TE_find_text\n\t\t\t TE_wait_text\n\t\t\t Most Web Click and Script functions\n\t\t\t web_reg_dialog\n\t\t\t web_reg_save_param_ex\n ..."},"1703":{y:0,u:"../Content/FuncRef/web/etc/lrFuncRef_WVF_RelFrameID_Attribute.htm",l:-1,t:"RelFrameID Attribute",i:0.000460081523397106,a:"The RelFrameID attribute represents the frame ID of the current HTML page relative to the requested URL. RelFrameID is not supported in GUI level scripts. In web scripts, a Relative Frame ID is specified as a dot–delimited sequence of decimal integers also known as qualifiers. You can specify a ..."},"1704":{y:0,u:"../Content/FuncRef/web/etc/lrFuncRef_WVF_ResourceByteLimit.htm",l:-1,t:"ResourceByteLimit",i:0.000297246785844625,a:"The ResourceByteLimit sets a limit based on the accumulated size of the bodies of the resources on this web page that have already been downloaded. When this limit is reached, no more resources are downloaded. The limit effects only the downloading of resources.  Downloading a resource is begun if ..."},"1705":{y:0,u:"../Content/FuncRef/web/etc/lrFuncRef_WVF_User_Agent.htm",l:-1,t:"UserAgent",i:0.000155533619839092,a:"UserAgent identifies a component other than the browser that will execute the step, for example, an ActiveX component running under the browser. This user agent header is sent for the requests made by the step. No check is made to confirm that the user agent argument matches the browser\u0027s User-Agent ..."},"1706":{y:0,u:"../Content/FuncRef/web/etc/lrFuncRef_WVF_User_Authentication.htm",l:-1,t:"User Authentication",i:0.000198261207692204,a:"The following types of user authentication are supported: Basic NTLM Digest When a web server requests Basic authentication, VuGen automatically inserts a  web_set_user  function with the recorded arguments into the script. However, when the web server demands the more secure NTLM or Digest ..."},"1707":{y:0,u:"../Content/FuncRef/web/etc/lrFuncRef_WVF_Using_Binary_Code.htm",l:-1,t:"Using Binary Code",i:0.000580955001687384,a:"You can use the following format to include binary code in: the LB and RB properties parameter of a web_reg_save_param function\n                 EscapedBinary data for web_convert_to_formatted or web_convert_from_formatted the text for a web_reg_find or web_global_verification functions\n             ..."},"1708":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_WinInet_ErrCds.htm",l:-1,t:"WinInet Error Codes",i:0.000132341366777373,a:"The Microsoft Win32 Internet (WinInet) API provides stand-alone applications with easy access to standard Internet protocols such as FTP and HTTP.  The following is a list of error codes returned by the Microsoft Win32 Internet (WinInet) API functions. For more information, see the current MSDN ..."},"1709":{y:0,u:"../Content/FuncRef/Soap/etc/lrFuncRef_SOAP_web_srv_funcs.htm",l:-1,t:"Web Services Functions (SOAP, WEB_SERVICE, Silverlight)",i:0.0022448089239666,a:"Web Services Functions (SOAP, WEB_SERVICE, Silverlight) These functions support tests of Web Services and SOAP calls. Click one of the following functions for more information: JMS Transport Functions"},"1710":{y:0,u:"../Content/FuncRef/Soap/etc/lrFuncRef_SOAP_Alphbtcl_Lst_Funcs.htm",l:-1,t:"Alphabetical List of Functions",i:0.000132341366777373,a:"Alphabetical List of Functions Click one of the following functions for more information: JMS Transport Functions"},"1711":{y:0,u:"../Content/FuncRef/jms/lrFr_jms_publish_message_topic.htm",l:-1,t:"jms_publish_message_topic",i:0.000349103849071539,a:"Publishes messages to a specific topic. int jms_publish_message_topic( const char * StepName, const char * PublishedMessage, const char * TopicName ); This function returns LR_PASS (0) on success or LR_FAIL (1) on failure. Note that LR_PASS and LR_FAIL generally indicate whether the function call ..."},"1712":{y:0,u:"../Content/FuncRef/jms/lrFr_jms_receive_message_queue.htm",l:-1,t:"jms_receive_message_queue",i:0.000350297357842088,a:"Receives a message from a queue. int jms_receive_message_queue( const char * StepName, const char * ReceiveQueueName); This function returns LR_PASS (0) on success or LR_FAIL (1) on failure. Note that LR_PASS and LR_FAIL generally indicate whether the function call completed without an exception, ..."},"1713":{y:0,u:"../Content/FuncRef/jms/lrFr_jms_receive_message_topic.htm",l:-1,t:"jms_receive_message_topic",i:0.000518937143150427,a:"Receives published messages to a specific topic on a subscription.  int jms_receive_message_topic( const char * StepName, const char * SubscriberName, const char * TopicName ); This function returns LR_PASS (0) on success or LR_FAIL (1) on failure. Note that LR_PASS and LR_FAIL generally indicate ..."},"1714":{y:0,u:"../Content/FuncRef/jms/lrFr_jms_send_message_queue.htm",l:-1,t:"jms_send_message_queue",i:0.000220767016121702,a:"Sends a message to a queue. int jms_send_message_queue( const char * StepName, const char * SentMessage, const char * SendQueueName); This function returns LR_PASS (0) on success or LR_FAIL (1) on failure. Note that LR_PASS and LR_FAIL generally indicate whether the function call completed without ..."},"1715":{y:0,u:"../Content/FuncRef/jms/lrFr_jms_set_general_property.htm",l:-1,t:"jms_set_general_property",i:0.000220767016121702,a:"Sets a general property in the user context. int jms_set_general_property( const char * StepName, const char * Name, const char * Value ); This function returns LR_PASS (0) on success or LR_FAIL (1) on failure. Note that LR_PASS and LR_FAIL generally indicate whether the function call completed ..."},"1716":{y:0,u:"../Content/FuncRef/jms/lrFr_jms_set_message_property.htm",l:-1,t:"jms_set_message_property",i:0.000761931904221302,a:"Sets a JMS header or property for the next message to be sent, or uses a JMS header or property to filter received messages. int jms_set_message_property( const char * StepName, const char * name, const char * value); This function returns LR_PASS (0) on success or LR_FAIL (1) on failure. Note that ..."},"1717":{y:0,u:"../Content/FuncRef/jms/lrFr_jms_send_receive_message_queue.htm",l:-1,t:"jms_send_receive_message_queue",i:0.000350297357842088,a:"Sends a message to a specified queue and receives a message from a specified queue. int jms_send_receive_message_queue( const char * StepName, const char * SentMessage, const char * SendQueueName, const char * ReceiveQueueName ); This function returns LR_PASS (0) on success or LR_FAIL (1) on ..."},"1718":{y:0,u:"../Content/FuncRef/jms/lrFr_jms_subscribe_topic.htm",l:-1,t:"jms_subscribe_topic",i:0.000519921414831526,a:"Creates a subscription for a topic. int jms_subscribe_topic( const char * StepName, const char * SubscriberName, const char * TopicName ); This function returns LR_PASS (0) on success or LR_FAIL (1) on failure. Note that LR_PASS and LR_FAIL generally indicate whether the function call completed ..."},"1719":{y:0,u:"../Content/FuncRef/Soap/lrFr_silverlight_service_call.htm",l:-1,t:"silverlight_service_call",i:0.000439474399796611,a:"Calls a web service in a Silverlight environment. int silverlight_service_call( const char *StepName, [URL,] ExpectedResponse, \u003cList of specifications\u003e, [BEGIN_ARGUMENTS, Arguments, END_ARGUMENTS,] [Send Attachments, ][BEGIN_RESULT, Results, END_RESULT,] [Receive Attachments, ] LAST ); ..."},"1720":{y:0,u:"../Content/FuncRef/Soap/lrFr_silverlight_soap_request.htm",l:-1,t:"silverlight_soap_request",i:0.000364762644493039,a:"Performs a SOAP request in a Silverlight environment. int silverlight_soap_request( const char *StepName,ExpectedResponse, URL, \u003cXMLEnvelope\u003e, [Attachments,] [const char *UserHandlerName], LAST ); The silverlight_soap_request function performs a SOAP request in a Silverlight environment. It sends a ..."},"1721":{y:0,u:"../Content/FuncRef/Soap/lrFr_soap_request.htm",l:-1,t:"soap_request",i:0.000716445215194719,a:"Performs a SOAP request. int soap_request( const char *StepName,ExpectedResponse, URL, \u003cXMLEnvelope\u003e, [Attachments,] LAST ); The soap_request function performs a SOAP request. It sends a SOAP packet to the specified URL and receives the server response. The expected response is one of the following: ..."},"1722":{y:0,u:"../Content/FuncRef/Soap/lrFr_soa_xml_validate.htm",l:-1,t:"soa_xml_validate",i:0.000220586996498938,a:"soa_xml_validate This function was discontinued as of LoadRunner 11.50. The functionality was moved to Micro Focus Service Test."},"1723":{y:0,u:"../Content/FuncRef/Soap/lrFr_web_service_call.htm",l:-1,t:"web_service_call",i:0.00116513603216688,a:"Calls a web service. int web_service_call( const char *StepName, [URL,] ExpectedResponse, \u003cList of specifications\u003e, [BEGIN_ARGUMENTS, Arguments, END_ARGUMENTS,] [Send Attachments, ][BEGIN_RESULT, Results, END_RESULT,] [Receive Attachments, ] LAST ); The web_service_call function calls a web service. ..."},"1724":{y:0,u:"../Content/FuncRef/Soap/lrFr_web_service_cancel_security.htm",l:-1,t:"web_service_cancel_security",i:0.000221015585274743,a:"Cancels the settings from the preceding call to web_service_set_security. int web_service_cancel_security( ); After a call to web_service_cancel_security, the tokens specified in the previous call to  web_service_set_security  are no longer added when  soap_request  and  web_service_call  are ..."},"1725":{y:0,u:"../Content/FuncRef/Soap/lrFr_web_service_cancel_securty_saml.htm",l:-1,t:"web_service_cancel_security_saml",i:0.000272703533179099,a:"This function is supported for legacy purposes. For new scripts, we recommend that you use  web_service_cancel_security_saml . Cancels the settings from the preceding call to web_service_set_security_saml. int web_service_cancel_security_saml( ); After a call to web_service_cancel_security_saml, the ..."},"1726":{y:0,u:"../Content/FuncRef/Soap/lrFr_web_service_cancel_security_saml_ex.htm",l:-1,t:"web_service_cancel_security_saml_ex",i:0.000221015585274743,a:"Cancels the settings from the preceding call to web_service_set_security_saml_ex. int web_service_cancel_security_saml_ex( ); After a call to web_service_cancel_security_saml_ex, the tokens specified in the previous call to  web_service_set_security_saml_ex  are no longer added when  soap_request  ..."},"1727":{y:0,u:"../Content/FuncRef/Soap/lrFr_web_service_set_option.htm",l:-1,t:"web_service_set_option",i:0.000538718426269022,a:"Sets an option before a call to a web service. int web_service_set_option( const char *OptionName, const char *OptionValue ); The web_service_set_option function changes the settings for all following calls to a web service. This function is not recorded. Add it manually to the script before a  ..."},"1728":{y:0,u:"../Content/FuncRef/Soap/lrFr_web_service_set_security.htm",l:-1,t:"web_service_set_security",i:0.000301268945548664,a:"Adds security tokens to subsequent soap and web service calls. int web_service_set_security ( [const char * TtlIsSeconds ,] SECURITY_TOKEN, const char * attributes, [SECURITY_TOKEN , attributes... , SECURITY_TOKEN, attributes,] MESSAGE_SIGNATURE, const char * attributes, [MESSAGE_SIGNATURE, ..."},"1729":{y:0,u:"../Content/FuncRef/Soap/lrFr_web_service_set_security_saml.htm",l:-1,t:"web_service_set_security_saml",i:0.000267375740545584,a:"This function is supported for legacy purposes. For new scripts, we recommend that you use  web_service_set_security_saml_ex . Adds security tokens to subsequent soap and web service calls using SAML. int web_service_set_security_saml( [const char * IssuerURL,] [const char * Username, const char * ..."},"1730":{y:0,u:"../Content/FuncRef/Soap/lrFr_web_service_set_security_saml_ex.htm",l:-1,t:"web_service_set_security_saml_ex",i:0.000304043078007137,a:"Adds security tokens to subsequent soap and web service calls using SAML. The web_service_set_security_saml_ex function works with the WCF/.NET toolkit. int web_service_set_security_saml( [const char * IssuerURL,] [const char * Username, const char * Password,] [const char * TokenType,] [const char ..."},"1731":{y:0,u:"../Content/FuncRef/Soap/lrFr_web_service_wait_for_event.htm",l:-1,t:"web_service_wait_for_event",i:0.000460790874692157,a:"Waits for response to previous asynchronous service request. This function returns the name of the event captured. If \"Quantifier=ALL\" is specified and more than one event is captured, any one of the event names is returned. If the call times out, null is returned. char * ..."},"1732":{y:0,u:"../Content/FuncRef/Soap/lrFr_ws_sign_saml_assertion.htm",l:-1,t:"ws_sign_saml_assertion",i:0.00038437872570148,a:"Signs an SAML assertion. int ws_sign_saml_assertion( const char * AssertionContent, const char * CertificateFile, [const char * CertificatePassword,] const char * OutParam ); The ws_sign_saml_assertion function signs a Security Assertion Markup Language (SAML) assertion.  All the arguments are ..."},"1733":{y:0,u:"../Content/FuncRef/Soap/lrFr_wsdl_wsi_validation.htm",l:-1,t:"wsdl_wsi_validation",i:0.000221015585274743,a:"Validates the WSDL file of a web service and reports on compliance. int wsdl_wsi_validation( const char *ServiceName ); The wsdl_wsi_validation function checks whether the WSDL file of an imported service is compliant with WS-I (Web Services Interoperability) standards. Before this function is ..."},});