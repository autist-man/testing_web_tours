define({"1125":{y:0,u:"../Content/FuncRef/mapi/lrFuncRef_mpi_mapi_set_pse.htm",l:-1,t:"mapi_set_property_sz_ex",i:0.000288787332741026,a:"Obtains a MAPI property for a specific session. void mapi_set_property_sz_ex( MAPI *ppmapi, char *property, char *value ); The mapi_set_property_sz_ex function sets a MAPI session property value for a specific session.  This function is for use with multiple sessions. For global sessions, use the  ..."},"1126":{y:0,u:"../Content/FuncRef/mapi/etc/lrFuncRef_Mapi_Properties.htm",l:-1,t:"MAPI Properties",i:0.000373712192890848,a:"MAPI Properties These properties are supported for  mapi_get_property_sz  and  mapi_get_property_sz_ex :"},"1127":{y:0,u:"../Content/FuncRef/mqtt/lrFr_MQTT.htm",l:-1,t:"MQTT Vuser Functions",i:0.00396900397414086,a:"MQTT (MQ Telemetry Transport) is a publish/subscribe-based messaging protocol for use over the TCP/IP protocol. The protocol is optimized for small bandwidth or unstable networks. It is most commonly used for device-to-device communication as in the Internet of things (IoT). Alphabetical List of ..."},"1128":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_await_messages.htm",l:-1,t:"mqtt_await_messages",i:0.000703831385900416,a:"Waits until there is at least one message in the inbox. C Language size_t mqtt_await_messages( MQTT handle, int timeoutMsec); Arguments General mqtt_await_messages waits until there is at least one message in the inbox. The script run continues after there is a message or after the wait times out. ..."},"1129":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_clear_inbox.htm",l:-1,t:"mqtt_clear_inbox",i:0.000446941429540759,a:"Discards all messages in the inbox. C Language int mqtt_clear_inbox( MQTT handle ); Arguments General mqtt_clear_inbox clears the inbox, discarding all messages. Call this function only if the actual content of the messages is not important, for example, if the script tests loading the server. If ..."},"1130":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_connect.htm",l:-1,t:"mqtt_connect",i:0.00104989142389492,a:"Establishes connection. C Language int mqtt_connect( MQTT handle, const char* url); Arguments General mqtt_connect connects the client to the broker. If invalid arguments are passed, the Vuser aborts, even if Continue on error is set. Return Values \n        MQTT_SUCCESS or MQTT_FAIL Parameterization ..."},"1131":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_create.htm",l:-1,t:"mqtt_create",i:0.00357771265021052,a:"Creates an MQTT client and returns its connection handle. C Language MQTT mqtt_create(); Arguments None General mqtt_create creates one MQTT client and returns that client\u0027s handle. The client is discarded on Vuser termination. Two clients per Vuser can be created. Return Values The MQTT client ..."},"1132":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_disconnect.htm",l:-1,t:"mqtt_disconnect",i:0.000538474233472181,a:"Disconnects the MQTT client from the server. C Language int mqtt_disconnect( MQTT handle); Arguments General mqtt_disconnect disconnects the client from the broker. If invalid arguments are passed, the Vuser aborts, even if Continue on error is set. Return Values MQTT_SUCCESS or MQTT_FAIL ..."},"1133":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_free_message.htm",l:-1,t:"mqtt_free_message",i:0.000703831385900416,a:"Releases memory where message is stored. C Language int mqtt_free_message( MQTT_MESSAGE message); Arguments General mqtt_free_message releases memory where message is stored. If invalid arguments are passed, the Vuser aborts, even if Continue on error is set. Return Values \n        MQTT_SUCCESS\n     ..."},"1134":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_get_length.htm",l:-1,t:"mqtt_get_length",i:0.000446941429540759,a:"Returns the message payload length. C Language size_t mqtt_get_length( MQTT_MESSAGE message); Arguments General mqtt_get_length returns the message payload length. If invalid arguments are passed, the Vuser aborts, even if Continue on error is set. Return Values \n        The length in bytes. ..."},"1135":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_get_payload.htm",l:-1,t:"mqtt_get_payload",i:0.000446941429540759,a:"Returns the message payload. C Language const char* mqtt_get_payload( MQTT_MESSAGE message); Arguments General mqtt_get_payload returns the message payload. If invalid arguments are passed, the Vuser aborts, even if Continue on error is set. Return Values The message payload as a pointer to a binary ..."},"1136":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_get_topic.htm",l:-1,t:"mqtt_get_topic",i:0.000446941429540759,a:"Returns the message topic. C Language const char* mqtt_get_topic( MQTT_MESSAGE message); Arguments General mqtt_get_topic returns the message topic. If invalid arguments are passed, the Vuser aborts, even if Continue on error is set. Return Values A pointer to the topic string. Parameterization ..."},"1137":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_publish.htm",l:-1,t:"mqtt_publish",i:0.000446941429540759,a:"Publishes a message. C Language int mqtt_publish( MQTT handle, const char* topic, const char* payload, int length, enum MQTT_QOS qos, enum MQTT_RETAIN_FLAG retainFlag); Arguments General mqtt_publish publishes a message to the specified topic. If the connection is lost during an mqtt_publish ..."},"1138":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_read_inbox.htm",l:-1,t:"mqtt_read_inbox",i:0.00108312732532574,a:"Reads one message and removes that message from the inbox for handling. C Language MQTT_MESSAGE mqtt_read_inbox( MQTT handle ); Arguments General mqtt_read_inbox removes a message from the inbox and returns the message handle. After handling a message, release the message handle with  ..."},"1139":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_set_client_id.htm",l:-1,t:"mqtt_set_client_id",i:0.000406744763250482,a:"Sets the MQTT Client ID for connection. C Language int mqtt_set_client_id( MQTT handle, const char* id); Arguments General mqtt_set_client_id sets the MQTT Client ID. \n\t\tIf this function is not passed, the ID is generated automatically prior to connection.\n\t\tCall this function before  mqtt_connect . ..."},"1140":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_set_credentials.htm",l:-1,t:"mqtt_set_credentials",i:0.000406744763250482,a:"Sets the user name and password. C Language int mqtt_set_credentials( MQTT handle, const char* username, const char* password); Arguments General mqtt_set_credentials sets the user name and password of a broker server account. Call this function before  mqtt_connect . If invalid arguments are ..."},"1141":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_set_lwt.htm",l:-1,t:"mqtt_set_lwt",i:0.000406744763250482,a:"Sets the Last Will and Testament message. C Language int mqtt_set_lwt( MQTT handle, const char* topic, const char* payload, int length, enum MQTT_QOS qos, enum MQTT_RETAIN_FLAG retainFlag); Arguments General mqtt_set_lwt sets the message the broker sends to other subscribers of the specified topic ..."},"1142":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_set_tls_certificate.htm",l:-1,t:"mqtt_set_tls_certificate",i:0.000406744763250482,a:"Sets the TLS private key file, certificate file, and the private key password. C Language int mqtt_set_tls_certificate( MQTT handle, const char* certificatePath, const char* pkeyPath, const char* pkeyPassword); Arguments General mqtt_set_tls_certificate  sets the TLS private key file, certificate ..."},"1143":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_set_tls_parameters.htm",l:-1,t:"mqtt_set_tls_parameters",i:0.000406744763250482,a:"Sets the TLS version and cipher list for a connection. C Language int mqtt_set_tls_parameters( MQTT handle, enum MQTT_TLS_VERSION version, const char* ciphers); Arguments General mqtt_set_tls_parameters sets the TLS version and cipher list for a connection. Call this function before  mqtt_connect . ..."},"1144":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_subscribe.htm",l:-1,t:"mqtt_subscribe",i:0.000538474233472181,a:"Subscribes the client to a topic. C Language int mqtt_subscribe( MQTT handle, const char* topic); Arguments General mqtt_subscribe subscribes the client to a topic or a set of topics that match the wildcard. The broker sends messages published on these topics automatically.  If the connection is ..."},"1145":{y:0,u:"../Content/FuncRef/mqtt/lrFr_mqtt_unsubscribe.htm",l:-1,t:"mqtt_unsubscribe",i:0.000385919560253145,a:"Unsubscribes the client from a topic. C Language int mqtt_unsubscribe( MQTT handle, const char* topic); Arguments General mqtt_unsubscribe unsubscribes the client from a topic or a set of topics on the broker.  You can call this function at any time during the run to stop the client from receiving ..."},"1146":{y:0,u:"../Content/FuncRef/nca/etc/lrFuncRef_OR_ONCA_Vuser_Fncs.htm",l:-1,t:"Oracle NCA Vuser Functions (NCA)",i:0.000132341366777373,a:"The NCA Vuser functions are generated when you record an Oracle NCA session. A function\u0027s prefix indicates the object upon which the action is applied. For example, nca_button_press activates a push button, and nca_flex_press_find clicks Find in a Flexfield window. The supported objects are buttons, ..."},"1147":{y:0,u:"../Content/FuncRef/nca/etc/lrFuncRef_OR_Alphbtcl_Lst_Funcs.htm",l:-1,t:"Alphabetical Listing",i:0.000137454589915251,a:"To enable VuGen to record the names of NCA objects, you must configure the application server to provide the necessary data. To do this, edit the startup HTML file that is called when the applet viewer begins. Modify the line:  \u003cPARAM name=\"serverArgs ............ fndnam=APPS\"\u003e and add the Oracle ..."},"1148":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_exit_or_app.htm",l:-1,t:"exit_oracle_application",i:0.000132734437146343,a:"Exits the Oracle NCA application. int exit_oracle_application( ); The exit_oracle_application function disconnects from the Oracle NCA database server and exits the application. Return Values Oracle NCA Error Codes Parameterization You cannot use standard parameterization for any arguments in this ..."},"1149":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_bttn_dblps.htm",l:-1,t:"nca_button_double_press",i:0.000227835439993288,a:"Performs a double press on a button object. int nca_button_double_press( LPCSTR name ); The nca_button_double_press function performs a double press on the specified push button. Return Values Oracle NCA Error Codes Parameterization The following variable can be parameterized using standard ..."},"1150":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_bttn_set.htm",l:-1,t:"nca_button_set",i:0.000227835439993288,a:"Sets the state of a radio or check button. int nca_button_set( LPCSTR button, int istate ); The nca_button_set function sets a button state to ON or OFF. The TOGGLE option reverses the current state.  Return Values Oracle NCA Error Codes Parameterization The following variable can be parameterized ..."},"1151":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_cmbo_slitm.htm",l:-1,t:"nca_combo_select_item",i:0.000253485922659605,a:"Selects an item in a combo box.  int nca_combo_select_item( LPCSTR name, LPCSTR item_name ); The nca_combo_select_item function selects an item in a combo box. Return Values Oracle NCA Error Codes Parameterization All arguments of this function may be parameterized using standard parameterization."},"1152":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_cmbo_sitm.htm",l:-1,t:"nca_combo_set_item",i:0.000253485922659605,a:"Sets a new item in a combo box. int nca_combo_set_item( LPCSTR name, LPCSTR item_name ); The nca_combo_set_item function writes item_name into the combo box name. Return Values Oracle NCA Error Codes Parameterization All arguments of this function may be parameterized using standard ..."},"1153":{y:0,u:"../Content/FuncRef/nca/LrFr_nca_configurator_prmtrze_data.htm",l:-1,t:"nca_configurator_parameterize_data",i:0.000320120889337435,a:"Returns the input string after substituting Oracle Configurator-related information.  LPCSTR nca_configurator_parameterize_data( LPCSTR data ); nca_configurator_parameterize_data is a  service function  that substitutes parameter values with session-specific data from the Oracle Configurator engine. ..."},"1154":{y:0,u:"../Content/FuncRef/nca/LrFr_nca_configurator_prmtrze_url.htm",l:-1,t:"nca_configurator_parameterize_url",i:0.000320120889337435,a:"Returns the input URL after substituting Oracle Configurator-related information. LPCSTR nca_configurator_parameterize_url( LPCSTR URL ); nca_configurator_parameterize_url is a  service function  that replaces parameter values in an XML string that is %-encoded (URL-encoded) with session-specific ..."},"1155":{y:0,u:"../Content/FuncRef/nca/lrFr_nca_configurator_set_ui_data.htm",l:-1,t:"nca_configurator_set_ui_data",i:0.000320120889337435,a:"Saves Oracle Configurator data from an HTTP service response as internal parameters for correlation during replay. int nca_configurator_set_ui_data( LPCSTR ui_data_string ); nca_configurator_set_ui_data is an  service function  for Oracle Configurator that parses data received from HTTP service ..."},"1156":{y:0,u:"../Content/FuncRef/nca/lrFr_nca_configurator_start.htm",l:-1,t:"nca_configurator_start",i:0.000289374566567104,a:"Saves Oracle Configurator initialization information as internal parameters for correlation during replay. int nca_configurator_start( LPCSTR java_object, LPCSTR configurator_applet ); nca_configurator_start is a  service function  that saves Oracle Configurator initialization information as ..."},"1157":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_cnct_srvr.htm",l:-1,t:"nca_connect_server",i:0.000322459020766616,a:"Connects to an Oracle NCA database server. int nca_connect_server( LPCSTR host, LPCSTR port, LPCSTR command_line ); The nca_connect_server function connects to an Oracle NCA database server using the specified host, port number, and module.  Return Values Oracle NCA Error Codes Parameterization All ..."},"1158":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_cnsle_gtxt.htm",l:-1,t:"nca_console_get_text",i:0.0002315692834928,a:"nca_console_get_text Retrieves the console message.  int nca_console_get_text( char *text ); The nca_console_get_text function retrieves the Oracle NCA console message.  Return Values Oracle NCA Error Codes Parameterization You cannot use standard parameterization for any arguments in this function."},"1159":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_edit_bxprs.htm",l:-1,t:"nca_edit_box_press",i:0.000207315053860234,a:"nca_edit_box_press Presses on an edit box message. int nca_edit_box_press( LPCSTR name ); The nca_edit_box_press function presses on an edit box message. Return Values Oracle NCA Error Codes Parameterization The following variable can be parameterized using standard parameterization: name"},"1160":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_edit_click.htm",l:-1,t:"nca_edit_click",i:0.000207315053860234,a:"Clicks in an edit object. int nca_edit_click( LPCSTR edit ); The nca_edit_click function clicks inside the specified edit object to place the cursor within the box. Once the cursor is in the box, the user can either type a value or select one from a list of values. Return Values Oracle NCA Error ..."},"1161":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_edit_gttxt.htm",l:-1,t:"nca_edit_get_text",i:0.000207315053860234,a:"Returns the text in an edit object. int nca_edit_get_text( LPCSTR edit, char *out_string ); The nca_edit_get_text function returns all of the text that is found in the specified edit object.  Return Values Oracle NCA Error Codes Parameterization The following variable can be parameterized using ..."},"1162":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_edit_press.htm",l:-1,t:"nca_edit_press",i:0.000207315053860234,a:"Activates the browse button in an edit field. int nca_edit_press( LPCSTR edit ); The nca_edit_press function activates the browse button in an edit field. This opens the list of the available values. Return Values Oracle NCA Error Codes Parameterization The following variable can be parameterized ..."},"1163":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_edit_set.htm",l:-1,t:"nca_edit_set",i:0.000207315053860234,a:"Sets the contents of an edit object. int nca_edit_set( LPCSTR edit, LPCSTR text ); The nca_edit_set function sets the contents of an edit object with the specified string. It replaces any existing string. Return Values Oracle NCA Error Codes Parameterization All arguments of this function may be ..."},"1164":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flx_clkcel.htm",l:-1,t:"nca_flex_click_cell",i:0.000190525647024099,a:"Clicks a table cell in a Flexfield window. int nca_flex_click_cell( LPCSTR name, LPCSTR row, LPCSTR column ); The nca_flex_click_cell function clicks in the specified table cell in a Flexfield window. Return Values Oracle NCA Error Codes Parameterization All input string arguments (char type) can be ..."},"1165":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flx_gcelda.htm",l:-1,t:"nca_flex_get_cell_data",i:0.000190525647024099,a:"Gets data from a Flexfield cell. int nca_flex_get_cell_data( LPCSTR name, LPCSTR row, LPCSTR column, LPSTR data ); The nca_flex_get_cell_data function gets the contents of the specified cell in a Flexfield, and stores it in a variable. Return Values Oracle NCA Error Codes Parameterization All input ..."},"1166":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flx_gcn.htm",l:-1,t:"nca_flex_get_column_name",i:0.000190525647024099,a:"Gets the name of a column in a Flexfield window. int nca_flex_get_column_name( LPCSTR window_name, int column, LPCSTR column_name ); The nca_flex_get_column_name function gets the name of a column in a Flexfield window. The function writes the name of the column into the output parameter ..."},"1167":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flx_grn.htm",l:-1,t:"nca_flex_get_row_name",i:0.000190525647024099,a:"Gets the name of a row in a Flexfield window. int nca_flex_get_row_name( LPCSTR window_name, int row, LPCSTR row_name ); The nca_flex_get_row_name function gets the name of a row in a Flexfield window. The function writes the name of the row into the output parameter row_name. Return Values Oracle ..."},"1168":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flx_prscl.htm",l:-1,t:"nca_flex_press_clear",i:0.000190525647024099,a:"Presses Clear in a Flexfield window. int nca_flex_press_clear( LPCSTR name ); The nca_flex_press_clear function presses the Clear button in the specified Flexfield window. Return Values Oracle NCA Error Codes Parameterization All input string arguments (char type) can be parameterized using standard ..."},"1169":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flx_prsfd.htm",l:-1,t:"nca_flex_press_find",i:0.000190525647024099,a:"Presses Find in a Flexfield window. int nca_flex_press_find( LPCSTR name ); The nca_flex_press_find function presses the Find button in the specified Flexfield window. Return Values Oracle NCA Error Codes Parameterization All input string arguments (char type) can be parameterized using standard ..."},"1170":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flx_prshp.htm",l:-1,t:"nca_flex_press_help",i:0.000190525647024099,a:"Presses Help in a Flexfield window. int nca_flex_press_help( LPCSTR name ); The nca_flex_press_help function presses the Help button (the question mark) in the specified Flexfield window. Return Values Oracle NCA Error Codes Parameterization All input string arguments (char type) can be ..."},"1171":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flx_prslv.htm",l:-1,t:"nca_flex_press_lov",i:0.000190525647024099,a:"Clicks on the List of Values button in a Flexfield window. int nca_flex_press_lov( LPCSTR name, LPCSTR row, LPCSTR column ); The nca_flex_press_lov function clicks on the List of Values button in the specified Flexfield window to display a list of values for the active field. Return Values Oracle ..."},"1172":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flx_prsok.htm",l:-1,t:"nca_flex_press_ok",i:0.000190525647024099,a:"Presses OK in a Flexfield window. int nca_flex_press_ok( LPCSTR name ); The nca_flex_press_ok function presses the OK button in the specified Flexfield window. Return Values Oracle NCA Error Codes Parameterization All input string arguments (char type) can be parameterized using standard ..."},"1173":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flxstcelda.htm",l:-1,t:"nca_flex_set_cell_data",i:0.000190525647024099,a:"Inserts data into a Flexfield window. int nca_flex_set_cell_data( LPCSTR name, LPCSTR row, LPCSTR column, LPCSTR data ); The nca_flex_set_cell_data function sets the cell data in the specified Flexfield window. Return Values Oracle NCA Error Codes Parameterization All input string arguments (char ..."},"1174":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_flxstcdpok.htm",l:-1,t:"nca_flex_set_cell_data_press_ok",i:0.000190525647024099,a:"Presses OK in a Flexfield window after data was entered. int nca_flex_set_cell_data_press_ok( LPCSTR name, LPCSTR row, LPCSTR column, LPCSTR data ); The nca_flex_set_cell_data_press_ok function presses the OK button in a Flexfield window, after data was entered into a Flexfield manually (not ..."},"1175":{y:0,u:"../Content/FuncRef/nca/lrFr_nca_get_active_timers_count.htm",l:-1,t:"nca_get_active_timers_count",i:0.000205310316444855,a:"Returns the number of active timers. int nca_get_active_timers_count( ); nca_get_active_timers_count returns the number of active timers. The valid indexes of timers for use in  nca_get_timer_interval  and  nca_wait_for_timer  are 0 to ( nca_get_active_timers_count() - 1). Parameterization ..."},"1176":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_gt_tmr_int.htm",l:-1,t:"nca_get_timer_interval",i:0.000248939092702365,a:"Returns the time in milliseconds until the specifed timer times out. int nca_get_timer_interval( int timer_number ); nca_get_timer_interval returns the time in milliseconds until the specifed timer times out. Parameterization Parameterization is not available for this function."},"1177":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_gt_top_win.htm",l:-1,t:"nca_get_top_window",i:0.000200210750632609,a:"Gets the logical name of the top window. int nca_get_top_window( char *winName ); The nca_get_top_window assigns the name of the top window to the user-allocated buffer pointed to by winName. Return Values Oracle NCA Error Codes Parameterization Parameterization is not available for this function."},"1178":{y:0,u:"../Content/FuncRef/nca/lrFr_nca_java_action.htm",l:-1,t:"nca_java_action",i:0.000796100885128558,a:"Performs an event on a Java object. int nca_java_action( LPCSTR name, LPCSTR event, LPCSTR arglist ); The nca_java_action function performs an event on a Java object using the specified arguments.  If several nca_java functions must be send to the server as a single packet, wrap the set of nca_java ..."},"1179":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_jav_delnam.htm",l:-1,t:"nca_java_delete_name",i:0.000194899511732734,a:"Deletes the saved property name in the Java object. int nca_java_delete_name( LPCSTR name, LPCSTR property_name ); Use nca_java_delete_name to delete the memory used to store properties saved by Vugen when recording Java objects. Vugen only saves Java objects when the JAVA_SAVE_PROP option in  ..."},"1180":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_jav_gtval.htm",l:-1,t:"nca_java_get_value",i:0.000239786132714662,a:"Retrieves the value of a Java object. int nca_java_get_value( LPCSTR name, char *value ); The nca_java_get_value function retrieves the value of the specified Java object. This and other nca_java functions can be sent to the server as a single packet by wrapping the set of nca_java calls with  ..."},"1181":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_jav_gtvalx.htm",l:-1,t:"nca_java_get_value_ex",i:0.000239786132714662,a:"Retrieves the value of a property of a Java object. int nca_java_get_value_ex( LPCSTR name, LPCSTR property_name, LPSTR property_value ); nca_java_get_value_ex retrieves the value of the specified property property_name within a Java object. This and other nca_java functions can be sent to the ..."},"1182":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_jav_setacl.htm",l:-1,t:"nca_java_set_area_class",i:0.000194899511732734,a:"Sets the area class property for a Java object. void nca_java_set_area_class( void * ReplyPropList ); The nca_java_set_area_class function sets the area class property, IXPROP_JAVA_AREA_CLASS (397), for a Java object.  This function is entered in the script when the server creates Java objects that ..."},"1183":{y:0,u:"../Content/FuncRef/nca/lrFr_nca_java_set_option.htm",l:-1,t:"nca_java_set_option",i:0.000369651208266714,a:"Sets options when recording a Java object. int nca_java_set_option( int option, \u003c option value \u003e ); The nca_java_set_option  function sets options when recording a Java object. The nca_java_set_option functioncurrently has two available options: JAVA_SAVE_PROP. When a Java object is selected in NCA, ..."},"1184":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_jav_serepr.htm",l:-1,t:"nca_java_set_reply_property",i:0.000194899511732734,a:"Sets a reply property for a Java object. void nca_java_set_reply_property( void * ReplyPropList ); The nca_java_set_reply_property function sets the specified Java reply properties.  One use of the function is to prevent \"402\", warning messages where the server is unable to reply to requests for ..."},"1185":{y:0,u:"../Content/FuncRef/nca/lrFr_nca_set_dispatcher_response.htm",l:-1,t:"nca_set_dispatcher_response",i:0.000211832324967867,a:"Sets the specified Dispatcher object properties for response to the server. void nca_configurator_start( LPCSTR ReplyClassList ); nca_configurator_start is a  service function  that sets the specified Dispatcher object properties for response to the server. Each set of properties in the ..."},"1186":{y:0,u:"../Content/FuncRef/nca/lrFr_nca_set_server_response_time.htm",l:-1,t:"nca_set_server_response_time",i:0.0002315692834928,a:"Specifies the server response time. void nca_set_server_response_time( int servTime); The nca_set_server_response_time function specifies a response timeout for the Oracle NCA server. This is the time the user remains in a listening state after sending a request to the server. ..."},"1187":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_lst_actitm.htm",l:-1,t:"nca_list_activate_item",i:0.000186102407740554,a:"Activates an item in a list. int nca_list_activate_item( LPCSTR list, LPCSTR item ); The nca_list_activate_item function double-clicks an item in a list. The item is indicated by its logical name.  Return Values Oracle NCA Error Codes Parameterization The following variable can be parameterized ..."},"1188":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_lst_gettxt.htm",l:-1,t:"nca_list_get_text",i:0.000186102407740554,a:"An Oracle–NCA function to retrieve the selected item from a list. int nca_list_get_text( LPCSTR name, char *value ); nca_list_get_text retrieves the selected item from a list into value.  Note that the user is responsible for the allocation and deallocation of the buffer value. Return Values Oracle ..."},"1189":{y:0,u:"../Content/FuncRef/nca/LrFr_nca_list_close.htm",l:-1,t:"nca_list_close",i:0.000186102407740554,a:"Closes the specified UI List object. int nca_list_close( LPCSTR name ); nca_list_close closes the open UI list object.  There is usually no need to insert this function or change its argument value after recording. Return Values Oracle NCA Error Codes Parameterization You cannot use standard ..."},"1190":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_lst_seinit.htm",l:-1,t:"nca_list_select_index_item",i:0.000186102407740554,a:"Selects a list item by its index. int nca_list_select_index_item( LPCSTR list, int index ); The nca_list_select_index_item function selects (performs a single mouse-click on) an item from a list. The item is indicated by its numeric index. The index is specified as a string, beginning with 0. Return ..."},"1191":{y:0,u:"../Content/FuncRef/nca/lrFr_nca_list_select_item.htm",l:-1,t:"nca_list_select_item",i:0.000186102407740554,a:"Selects a list item by its name. int nca_list_select_item( LPCSTR list, LPCSTR item ); The nca_list_select_item function selects (performs a single mouse-click on) an item from a list. The item is indicated by its name. Return Values Oracle NCA Error Codes Parameterization The following variable can ..."},"1192":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_log_cncl.htm",l:-1,t:"nca_logon_cancel",i:0.000211832324967867,a:"Cancels a login to an Oracle NCA database. int nca_logon_cancel( LPCSTR name ); The nca_logon_cancel function cancels the connection to an Oracle NCA database. The connection name was set with the connection_name parameter of the  nca_logon_connect . This function does not, however, disconnect from ..."},"1193":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_log_cnct.htm",l:-1,t:"nca_logon_connect",i:0.000256847068271956,a:"Performs a login to an Oracle NCA database. int nca_logon_connect( LPCSTR connection_name, LPCSTR username, LPCSTR password,  LPCSTR database ); The nca_logon_connect function performs a login to an Oracle NCA database. It connects to the database using the specified user name and password. Return ..."},"1194":{y:0,u:"../Content/FuncRef/nca/lrFuncRef_OR_nca_lv_autosl.htm",l:-1,t:"nca_lov_auto_select",i:0.000186102407740554,a:"Specifies the first letter of a list item. int nca_lov_auto_select( LPCSTR name,charselection ); The nca_lov_auto_select function enters a letter indicating the first character of the item you want to select from a list of values. The item that begins with the specified letter is selected. If there ..."},});