define({"1560":{y:0,u:"../Content/FuncRef/rte/lrFuncRef_RTE_TE_sperror.htm",l:-1,t:"TE_sperror",i:0.000392467678373565,a:"Translates an error code into the corresponding string. char *TE_sperror( ); TE_sperror translates the current value of TE_errno into the corresponding error string. TE_errno is a value of the  RTE Error Codes . Return Values This function returns a pointer to a string. Parameterization You cannot ..."},"1561":{y:0,u:"../Content/FuncRef/rte/lrFuncRef_RTE_TE_type.htm",l:-1,t:"TE_type",i:0.000327849808147288,a:"Sends a string to the terminal emulator. int TE_type( const char *string ); Inputs The TE_type function depicts the keyboard input sent to the terminal emulator.  Keyboard input is evaluated to a string using the following conventions: Plain text can be input as a regular text string (including ..."},"1562":{y:0,u:"../Content/FuncRef/rte/lrFuncRef_RTE_TE_typng_styl.htm",l:-1,t:"TE_typing_style",i:0.000255466875886981,a:"Determines the way text is typed into the terminal emulator. int TE_typing_style( const char *style ); Inputs The TE_typing_style function determines how typed strings are submitted to the client application running in the terminal emulator. If you select FAST, characters are sent as a single ..."},"1563":{y:0,u:"../Content/FuncRef/rte/lrFuncRef_RTE_TE_unlk_kybd.htm",l:-1,t:"TE_unlock_keyboard",i:0.000255466875886981,a:"Unlocks the keyboard of a mainframe terminal. int TE_unlock_keyboard( void ); Use TE_unlock_keyboard to unlock a keyboard of a mainframe terminal after it became locked as a result of an error message. TE_unlock_keyboard is equivalent to pressing the F3 key. Return Values This function returns 0 if ..."},"1564":{y:0,u:"../Content/FuncRef/rte/lrFuncRef_RTE_TE_wait_crsr.htm",l:-1,t:"TE_wait_cursor",i:0.000227852042417464,a:"Waits for the cursor to appear at a specific location in the terminal window. int TE_wait_cursor( int col, int row, int stable, int timeout ); Inputs During replay, TE_wait_cursor waits for the cursor to appear at a specified location in the terminal window.  For the stable parameter, you specify ..."},"1565":{y:0,u:"../Content/FuncRef/rte/lrFuncRef_RTE_TE_wait_slnt.htm",l:-1,t:"TE_wait_silent",i:0.000227852042417464,a:"Waits for the client application to be silent for a specified amount of time. int TE_wait_silent( int sec, int milli, int timeout ); Inputs The TE_wait_silent function waits for the client application to be silent for a specified amount of time. The client is considered silent when the terminal ..."},"1566":{y:0,u:"../Content/FuncRef/rte/lrFuncRef_RTE_TE_wait_sync.htm",l:-1,t:"TE_wait_sync",i:0.000227852042417464,a:"Waits for the system to return from SYSTEM X or Input Inhibited mode. int TE_wait_sync( void ); During execution, the TE_wait_sync function suspends script execution and waits for the \"X SYSTEM\" message to be removed from the screen before continuing. The appearance of the \"X SYSTEM\" message ..."},"1567":{y:0,u:"../Content/FuncRef/rte/lrFuncRef_RTE_TE_wt_synctr.htm",l:-1,t:"TE_wait_sync_transaction",i:0.000227852042417464,a:"Records the time that the system remained in the most recent X SYSTEM mode. int TE_wait_sync_transaction( char *transaction_name ); You can instruct VuGen to record the time that the system remains in the X SYSTEM mode each time that the X SYSTEM mode is entered. To do so, VuGen inserts a ..."},"1568":{y:0,u:"../Content/FuncRef/rte/lrFuncRef_RTE_TE_wait_txt.htm",l:-1,t:"TE_wait_text",i:0.000227852042417464,a:"Waits for a text string to appear in a designated location. int TE_wait_text( const char *pattern, int timeout [, int col1, int row1, int col2, int row2, int *retcol, int *retrow, char *match ] ); Inputs Outputs Besides the pattern and timeout parameters, all the other parameters are optional. ..."},"1569":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_Cursor_Funcs.htm",l:-1,t:"Cursor Functions",i:0.000419622026515775,a:"Cursor Functions Click one of the following functions for more information:"},"1570":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_Error_Code_Funcs.htm",l:-1,t:"Error Code Functions",i:0.000424403486526134,a:"Error Code Functions Click one of the following functions for more information:"},"1571":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_Send_Txt_Funcs.htm",l:-1,t:"Send Text Functions",i:0.000528826110967182,a:"Send Text Functions Click one of the following functions for more information:"},"1572":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_Synch_Funcs.htm",l:-1,t:"Synchronization Functions",i:0.000598313101982353,a:"Synchronization Functions Click one of the following functions for more information:"},"1573":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_Sys_Var_Funcs.htm",l:-1,t:"System Variable Functions",i:0.000299656324042055,a:"System Variable Functions Click one of the following functions for more information:"},"1574":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_Te_Em_Connctn_Funcs.htm",l:-1,t:"Terminal Emulator Connection Functions",i:0.000476021230834221,a:"Terminal Emulator Connection Functions Click the following function for more information:"},"1575":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_Txt_Rtrvl_Funcs.htm",l:-1,t:"Text Retrieval Functions",i:0.00045453067595862,a:"Text Retrieval Functions Click one of the following functions for more information:"},"1576":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_RTE_Error_Codes.htm",l:-1,t:"RTE Error Codes",i:0.000243541669225211,a:"RTE Error Codes Many of the RTE Vuser functions return error codes on failure and set the TE_errno global variable. You can translate the error code into the corresponding string using two functions:  TE_sperror  and  TE_perror .  RTE script can return one of the following error codes:"},"1577":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_RteGenDevName.htm",l:-1,t:"RteGenerateDeviceName",i:0.000132341366777373,a:"Some protocols, such as APPC, require a unique device name for each terminal that logs on to the system. Using the runtime settings, you can specify that the TE_connect function generate a unique 8-character device name for each virtual user, and connect using this name. Although this solves the ..."},"1578":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_RTE_System_Variables.htm",l:-1,t:"RTE System Variables",i:0.00028559496041289,a:"RTE System Variables"},"1579":{y:0,u:"../Content/FuncRef/rte/etc/lrFuncRef_RTE_TE_type_Key_Defs.htm",l:-1,t:"TE_type Key Definitions",i:0.000225233018296787,a:"TE_type Key Definitions"},"1580":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Web_Vuser_Funcs.htm",l:-1,t:"Web Vuser Functions (WEB)",i:0.000132341366777373,a:"Web Vusers perform tests that communicate with the servers using the HTTP protocol. The web protocol is generally used to test Internet sites. The default language for the web protocol is C. Recording sessions create tests in C.  Java syntax are supported for a sub-set of the web functions. C++ can ..."},"1581":{y:0,u:"../Content/FuncRef/web/categories/lrFuncRef_WBCAT_Alph_Lst_Web_Funcs.htm",l:-1,t:"Alphabetical Listing of Web Functions",i:0.000211123965288249,a:"Alphabetical Listing of Web Functions Click one of the following functions for more information. "},"1582":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_ResponseCB.htm",l:-1,t:"Response Callback",i:0.000295960374882584,a:"ResponseCB Called at the end of a conversation. WEB_ASYNC_CB_RC_ENUM \u003cfunction name\u003e( IN const char *\taResponseHeadersStr,IN int aResponseHeadersLen,IN const char *aResponseBodyStr, IN int aResponseBodyLen, IN int aHttpStatusCode ); Return Values This function returns a value of  ..."},"1583":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_ResponseBodyBufferCB.htm",l:-1,t:"Response Body Buffer Callback",i:0.000295960374882584,a:"ResponseBodyBufferCB Called when there is content in the response body buffer and at the end of the response body. int \u003cfunction name\u003e ( IN const char *\taLastBufferStr, IN int\t\taLastBufferLen, IN const char *\taAccumulatedStr, IN int\t\taAccumulatedLen, IN int aHttpStatusCode );   Return Values Returns ..."},"1584":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_ResponseHeaderCB.htm",l:-1,t:"Response Header Buffer Callback",i:0.000295960374882584,a:"Called once before a sequence of pushed header buffers. int \u003cfunction name\u003e(IN int aHttpStatusCode, IN const char *\taAccumulatedHeadersStr, IN int\t\taAccumulatedHeadersLen); Return Values Returns a value of  WEB_ASYNC_CB_RC_ENUM General Information The response header buffer callback is a  function ..."},"1585":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_RequestCB.htm",l:-1,t:"Request Callback",i:0.000780889218300131,a:"RequestCB Called before a request is sent. WEB_ASYNC_CB_RC_ENUM \u003cfunction name\u003e(void); Return Values Returns a value of  WEB_ASYNC_CB_RC_ENUM General Information A request callback is a user-created function. It is invoked once during the creation of each  Task  within the  Conversation . The ..."},"1586":{y:0,u:"../Content/FuncRef/web/lrFr_web_add_auto_filter.htm",l:-1,t:"web_add_auto_filter",i:0.000341864690747301,a:"web_add_auto_filter"},"1587":{y:0,u:"../Content/FuncRef/web/lrFr_web_add_auto_header.htm",l:-1,t:"web_add_auto_header",i:0.000636970934079389,a:"web_add_auto_header Adds the specified header to all subsequent HTTP requests. C Language int web_add_auto_header( const char *Header, const char *Content ); "},"1588":{y:0,u:"../Content/FuncRef/web/lrFr_web_add_filter.htm",l:-1,t:"web_add_filter",i:0.000349324774128064,a:"web_add_filter"},"1589":{y:0,u:"../Content/FuncRef/web/lrFr_web_add_cookie.htm",l:-1,t:"web_add_cookie",i:0.0003212891163205,a:"web_add_cookie Adds, deletes, or replaces a cookie. C Language int web_add_cookie( const char *Cookie);"},"1590":{y:0,u:"../Content/FuncRef/web/lrFr_web_add_cookie_ex.htm",l:-1,t:"web_add_cookie_ex",i:0.000280250109868865,a:"web_add_cookie_ex Adds a cookie with specified add behavior. C Language int web_add_cookie_ex( const char *Cookie , [const char *Insert,][ const char *AllowEmptyDomain,] [ENDITEM, Cookie, [Insert,] [AllowEmptyDomain,] ] [ENDITEM...] LAST );"},"1591":{y:0,u:"../Content/FuncRef/web/lrFr_web_add_header.htm",l:-1,t:"web_add_header",i:0.000567333220744644,a:"web_add_header Adds the specified header to the next HTTP requests. C Language int web_add_header( const char *Header, const char *Content );"},"1592":{y:0,u:"../Content/FuncRef/web/lrFr_web_cache_cleanup.htm",l:-1,t:"web_cache_cleanup",i:0.000317985085113513,a:"web_cache_cleanup Clears the contents of the cache simulator. C Language int web_cache_cleanup( );"},"1593":{y:0,u:"../Content/FuncRef/web/lrFr_JV_web_button.htm",l:-1,t:"web.button",i:0.000169656071883255,a:"Emualtes a user clicking on a button to submit or reset an input elelement. Java Language int web.button ( String step_name, string options, long status); Arguments  Return Values Not applicable  Example \nweb_button(\"Sign In\", \n\t\"Snapshot=t3.inf\", \n\tDESCRIPTION, \n\t\t\"Type=submit\", \n\t\t\"Tag=INPUT\", ..."},"1594":{y:0,u:"../Content/FuncRef/web/lrFr_web_cleanup_auto_headers.htm",l:-1,t:"web_cleanup_auto_headers",i:0.000321908772692276,a:"web_cleanup_auto_headers Stops scripts from adding user–defined headers to subsequent HTTP requests. C Language int web_cleanup_auto_headers( );"},"1595":{y:0,u:"../Content/FuncRef/web/lrFr_web_concurrent_end.htm",l:-1,t:"web_concurrent_end",i:0.000344684558035552,a:"web_concurrent_end Marks the end of a concurrent group. C Language int web_concurrent_end( reserved );"},"1596":{y:0,u:"../Content/FuncRef/web/lrFr_web_concurrent_start.htm",l:-1,t:"web_concurrent_start",i:0.000344684558035552,a:"web_concurrent_start Marks the beginning of a concurrent group. C Language int web_concurrent_start( [char *ConcurrentGroupName,] NULL ); "},"1597":{y:0,u:"../Content/FuncRef/web/lrFr_web_convert_date_param.htm",l:-1,t:"web_convert_date_param",i:0.000227357683579203,a:"web_convert_date_param"},"1598":{y:0,u:"../Content/FuncRef/web/lrFr_web_convert_from_formatted.htm",l:-1,t:"web_convert_from_formatted",i:0.000368290070937369,a:"Converts a string created with one or more data format extensions back to the source format. This function can be used if Data Format Extensions are enabled in the runtime settings. For details about the data format extensions provided, and about the settings required to use this feature, see the ..."},"1599":{y:0,u:"../Content/FuncRef/web/lrFr_web_cleanup_cookies.htm",l:-1,t:"web_cleanup_cookies",i:0.0003212891163205,a:"web_cleanup_cookies Removes all cookies currently stored by the Vuser. C Language int web_cleanup_cookies( );"},"1600":{y:0,u:"../Content/FuncRef/web/lrFr_web_convert_param.htm",l:-1,t:"web_convert_param",i:0.000362197491023359,a:"web_convert_param"},"1601":{y:0,u:"../Content/FuncRef/web/lrFr_web_convert_to_formatted.htm",l:-1,t:"web_convert_to_formatted",i:0.000288532381513076,a:"web_convert_to_formatted Formats data using one or more data format extensions. C Language int web_convert_to_formatted (\"RawData=\u003cdata_string\u003e\", \"TargetParam=\u003cparameter_name\u003e\", \"ChainName=\u003cname\u003e\", LAST );"},"1602":{y:0,u:"../Content/FuncRef/web/lrFr_web_custom_request.htm",l:-1,t:"web_custom_request",i:0.00086153767565931,a:"Allows you to create a custom HTTP request with any method supported by HTTP.  C Language int web_custom_request( const char *RequestName, \u003cList of Attributes\u003e, [EXTRARES, \u003cList of Resource Attributes\u003e,] LAST); JavaScript  int object.custom_request( const char *RequestName, \u003cList of ..."},"1603":{y:0,u:"../Content/FuncRef/web/lrFr_web_dump_cache.htm",l:-1,t:"web_dump_cache",i:0.000317244557283406,a:"web_dump_cache"},"1604":{y:0,u:"../Content/FuncRef/web/lrFr_web_disable_keep_alive.htm",l:-1,t:"web_disable_keep_alive",i:0.000325734129337496,a:"web_disable_keep_alive Disables Keep–Alive HTTP connections. C Language int web_disable_keep_alive( );"},"1605":{y:0,u:"../Content/FuncRef/web/lrFr_web_enable_keep_alive.htm",l:-1,t:"web_enable_keep_alive",i:0.000325734129337496,a:"web_enable_keep_alive Enables Keep–Alive HTTP connections. C Language int web_enable_keep_alive( );"},"1606":{y:0,u:"../Content/FuncRef/web/_lrFr_web_find.htm",l:-1,t:"web_find",i:0.000207957314475113,a:"web_find Deprecated: use  web_reg_find . "},"1607":{y:0,u:"../Content/FuncRef/web/lrFr_web_get_int_property.htm",l:-1,t:"web_get_int_property",i:0.000421144135961908,a:"web_get_int_property Returns specific information about the previous HTTP request. C Language int web_get_int_property( const int HttpInfoType  );"},"1608":{y:0,u:"../Content/FuncRef/web/lrFr_web_global_verification.htm",l:-1,t:"web_global_verification",i:0.000377538780453528,a:"web_global_verification"},"1609":{y:0,u:"../Content/FuncRef/web/lrFr_web_global_verification_pause.htm",l:-1,t:"web_global_verification_pause",i:0.000314515034606131,a:"web_global_verification_pause Suspends the specified checks set by web_global_verification. C Language int web_global_verification_pause( constchar *ID [, constchar *ID1, ..., constchar *IDn], LAST );"},"1610":{y:0,u:"../Content/FuncRef/web/lrFr_web_global_verification_resume.htm",l:-1,t:"web_global_verification_resume",i:0.000270403618835282,a:"web_global_verification_resume Resumes the specified checks suspended by web_global_verification_pause. C Language int web_global_verification_resume( constchar *ID [, constchar *ID1, ..., constchar *IDn], LAST);"},"1611":{y:0,u:"../Content/FuncRef/web/lrFr_web_image.htm",l:-1,t:"web_image",i:0.00030303501567117,a:"web_image Emulates a mouse click on the image that is defined by the attributes. C Language int web_image( constchar *StepName, \u003cList of Attributes\u003e, [EXTRARES, \u003cList of Resource Attributes\u003e,] LAST );"},"1612":{y:0,u:"../Content/FuncRef/web/lrFr_web_image_check.htm",l:-1,t:"web_image_check",i:0.000304467956669572,a:"web_image_check Verifies the presence of a specified image inside an HTML page. C Language int web_image_check( const char *CheckName, \u003cList of Attributes\u003e, \u003c\"Alt=alt\"|| \"Src=src\"\u003e, LAST);"},"1613":{y:0,u:"../Content/FuncRef/web/lrFr_web_js_run.htm",l:-1,t:"web_js_run",i:0.000227357683579203,a:"Runs the specified JavaScript. C Language int web_js_run(\"Code=\u003cJS code\u003e\" | \"File=\u003cfile_name\u003e\",[\"Domain=domain\",] [\"ResultParam=parameter name\",] [SOURCES,[\"File=file_name\" | \"Code=code\", ENDITEM,]+ ] LAST) Code The main code argument contains literal JavaScript code.\n\t\t\t\t File The main code File ..."},"1614":{y:0,u:"../Content/FuncRef/web/lrFr_web_js_reset.htm",l:-1,t:"web_js_reset",i:0.000227357683579203,a:"Resets the JavaScript engine context for the Vuser. C Language int web_js_reset(); web_js_reset discards saved variables and objects and recovers the memory.  To run  web_js_run  and  web_js_reset , Javascript must be enabled in the run time settings under Internet Protocol \u003e Preferences \u003e Options… ..."},"1615":{y:0,u:"../Content/FuncRef/web/lrFr_web_link.htm",l:-1,t:"web_link",i:0.00030303501567117,a:"web_link Emulates a mouse click on the link that is defined by the attributes. C Language int web_link( constchar *StepName, \u003cList of Attributes\u003e, [EXTRARES, \u003cList of Resource Attributes\u003e,] LAST);"},"1616":{y:0,u:"../Content/FuncRef/web/lrFr_web_load_cache.htm",l:-1,t:"web_load_cache",i:0.000317244557283406,a:"web_load_cache"},"1617":{y:0,u:"../Content/FuncRef/web/lrFr_web_reg_add_cookie.htm",l:-1,t:"web_reg_add_cookie",i:0.000234733704544468,a:"web_reg_add_cookie"},"1618":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_reg_async_attributes.htm",l:-1,t:"web_reg_async_attributes",i:0.000252278941446998,a:"web_reg_async_attributes"},"1619":{y:0,u:"../Content/FuncRef/web/lrFr_web_reg_find.htm",l:-1,t:"web_reg_find",i:0.000584392271177556,a:"web_reg_find Registers a search for a text string on an HTML page. C Language int web_reg_find( const char *attribute_list, LAST );"},"1620":{y:0,u:"../Content/FuncRef/web/lrFr_web_reg_save_param.htm",l:-1,t:"web_reg_save_param",i:0.000855434883286542,a:"Registers a request to save dynamic data information to a parameter.  The C language version of this function is deprecated: In C, use  web_reg_save_param_ex  or  web_reg_save_param_xpath . Java Language int object.reg_save_param( String ParamName, String[] attributeList); Argument\n                  ..."},"1621":{y:0,u:"../Content/FuncRef/web/lrFr_web_reg_save_param_attrib.htm",l:-1,t:"web_reg_save_param_attrib",i:0.000209371575546305,a:"Registers a request to save dynamic data in a server response that has been formatted as HTML. The data is saved to a parameter.\n C Language int web_reg_save_param_attrib(\"ParamName=\u003coutput parameter name\u003e\", TagName=\u003cvalue\u003e, Extract=\u003cvalue\u003e, [Name=\u003cvalue\u003e, ] [Id=\u003cvalue\u003e, ] [Class=\u003cvalue\u003e, ] ..."},"1622":{y:0,u:"../Content/FuncRef/web/lrFr_web_reg_save_param_ex.htm",l:-1,t:"web_reg_save_param_ex",i:0.000600289257166869,a:"Registers a request to save dynamic data located between specified boundaries. The data is saved to a parameter.\n\n   C Language int web_reg_save_param_ex(\"ParamName=\u003coutput parameter name\u003e\", [LB[/IC][BIN]=\u003cvalue\u003e, ][RB[/IC][BIN]=\u003cvalue\u003e, ] \u003cList of Attributes\u003e, \u003cSEARCH FILTERS\u003e,LAST );  Return ..."},"1623":{y:0,u:"../Content/FuncRef/web/lrFr_web_reg_save_param_json.htm",l:-1,t:"web_reg_save_param_json",i:0.000201074722120974,a:"Registers a request to save dynamic data in an buffer that has been formatted as Json. The data is saved to a parameter. C Language int web_reg_save_param_json( \"ParamName=\u003coutput parameter name\u003e\", \"QueryString=\u003cjson query\u003e\",  [\"SelectAll=\u003cYes|No\u003e\",] \u003cList of Attributes\u003e, \u003cSearch Filters\u003e,LAST );  ..."},"1624":{y:0,u:"../Content/FuncRef/web/lrFr_web_reg_save_param_regexp.htm",l:-1,t:"web_reg_save_param_regexp",i:0.000420911232294755,a:"Registers a request to save dynamic data that matches a regular expression. The data is saved to a parameter. C Language int web_reg_save_param_regexp(\"ParamName=\u003coutput parameter name\u003e\", \"RegExp=\u003cregular_expression\u003e\", [\"Group=\u003c0-10\u003e\",] List of Attributes\u003e,] [\u003cSEARCH FILTERS\u003e,] LAST );  Return ..."},"1625":{y:0,u:"../Content/FuncRef/web/lrFr_web_reg_save_param_xpath.htm",l:-1,t:"web_reg_save_param_xpath",i:0.000458545907781392,a:"Registers a request to save dynamic data in an HTML buffer that has been formatted as XML. The data is saved to a parameter. C Language int web_reg_save_param_xpath( \"ParamName=\u003coutput parameter name\u003e\", \"QueryString=\u003cXpath\u003e\", [\"ReturnXML=\u003cYes|No\u003e\",] [\"SelectAll=\u003cYes|No\u003e\",] \u003cList of Attributes\u003e, ..."},"1626":{y:0,u:"../Content/FuncRef/web/lrFr_web_remove_auto_filter.htm",l:-1,t:"web_remove_auto_filter",i:0.00032299539586061,a:"web_remove_auto_filter"},"1627":{y:0,u:"../Content/FuncRef/web/lrFr_web_remove_auto_header.htm",l:-1,t:"web_remove_auto_header",i:0.000436523225006844,a:"web_remove_auto_header Stops scripts from adding a specific header to subsequent HTTP requests. C Language int web_remove_auto_header( const char *Header, char *Implicit, LAST ); "},"1628":{y:0,u:"../Content/FuncRef/web/lrFr_web_remove_cookie.htm",l:-1,t:"web_remove_cookie",i:0.0003212891163205,a:"web_remove_cookie Removes the specified cookie. C Language int web_remove_cookie( const char *Cookie);"},"1629":{y:0,u:"../Content/FuncRef/web/lrFr_web_report_data_point.htm",l:-1,t:"web_report_data_point",i:0.000227357683579203,a:"web_report_data_point"},"1630":{y:0,u:"../Content/FuncRef/web/lrFr_web_rest.htm",l:-1,t:"web_rest",i:0.000260509857157682,a:"Sends a REST API request using any method supported by HTTP. C Language int web_rest( const char *StepName, \"URL=\u003cURL\u003e\", \"Method=\u003cHTML method\u003e\", \"EncType=\u003cencoding type\u003e\",\"Body=\u003cbody of message\u003e\" ,\"Snapshot=\u003csnapshot file\u003e\", [[ITEMDATA [[\"Name=\u003cname\u003e\", \"Value|FileName=\u003cvalue\u003e\", ENDITEM,]] ]] ..."},"1631":{y:0,u:"../Content/FuncRef/web/lrFr_web_revert_auto_header.htm",l:-1,t:"web_revert_auto_header",i:0.000424816067385992,a:"web_revert_auto_header Stops scripts from adding a specific header to subsequent HTTP requests. C Language int web_revert_auto_header( const char *Header);"},"1632":{y:0,u:"../Content/FuncRef/web/lrFr_web_save_header.htm",l:-1,t:"web_save_header",i:0.000272687702444693,a:"web_save_header Saves request and response headers to a parameter. C Language int web_save_header( constchar *type, const char *param ); "},"1633":{y:0,u:"../Content/FuncRef/web/lrFr_web_save_param_length.htm",l:-1,t:"web_save_param_length",i:0.00017971035977725,a:"web_save_param_length"},"1634":{y:0,u:"../Content/FuncRef/web/lrFr_web_save_timestamp_param.htm",l:-1,t:"web_save_timestamp_param",i:0.00017971035977725,a:"Saves the current timestamp. int web_save_timestamp_param( const char *tmstampParam, LAST );  Return Values This function returns LR_PASS (0) on success, and LR_FAIL (1) on failure.  Parameterization Parameterization is not applicable to this function.  General Information web_save_timestamp_param ..."},"1635":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_option.htm",l:-1,t:"web_set_option",i:0.000320077684481696,a:"web_set_option Sets a web option.  C Language int web_set_option( const char *OptionID, const char *OptionValue, LAST );"},"1636":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_pac.htm",l:-1,t:"web_set_pac",i:0.00020600818837608,a:"web_set_pac"},"1637":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_proxy.htm",l:-1,t:"web_set_proxy",i:0.000303265166812026,a:"web_set_proxy Specifies that all subsequent HTTP requests be directed to the specified proxy server. C Language int web_set_proxy( const char *proxy_host:port );"},"1638":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_timeout.htm",l:-1,t:"web_set_timeout",i:0.000320077684481696,a:"web_set_timeout Specifies the maximum amount of time that a script waits for the specified operation to be performed. C Language int web_set_timeout( const char *Action, const char *TimeOut);"},"1639":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_user.htm",l:-1,t:"web_set_user",i:0.000542864083693879,a:"web_set_user Specifies a login string for a web server.  C Language int web_set_user( const char *username, const char *password, const char *[realm\\\\]host:port ); "},"1640":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_certificate.htm",l:-1,t:"web_set_certificate",i:0.000315971185877293,a:"web_set_certificate From version 12.55. Use  web_set_certificate_ex . Causes a script to use a specific certificate that is listed in the Internet Explorer registry. C Language int web_set_certificate( const char *CertificateNumber ); "},"1641":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_certificate_ex.htm",l:-1,t:"web_set_certificate_ex",i:0.000360734185374825,a:"web_set_certificate_ex Sets the certificate and key file attributes. C Language int web_set_certificate_ex( char *option_list, LAST ); "},"1642":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_max_html_param_len.htm",l:-1,t:"web_set_max_html_param_len",i:0.000235082508381831,a:"web_set_max_html_param_len Sets the maximum length of any HTML string that can be retrieved and saved as a parameter.  C Language int web_set_max_html_param_len( const char *length);"},"1643":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_max_retries.htm",l:-1,t:"web_set_max_retries",i:0.000320077684481696,a:"web_set_max_retries Sets the maximum number of retries of an Action step. C Language int web_set_max_retries( const char *MaxRetries );"},"1644":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_proxy_bypass.htm",l:-1,t:"web_set_proxy_bypass",i:0.000270427275038863,a:"web_set_proxy_bypass Specifies the list of URLs that the script can access directly, bypassing the proxy server. C Language int web_set_proxy_bypass( const char *bypass1..n ); "},"1645":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_proxy_bypass_local.htm",l:-1,t:"web_set_proxy_bypass_local",i:0.000270427275038863,a:"web_set_proxy_bypass_local Specifies whether or not the proxy server should bypass local addresses. C Language int web_set_proxy_bypass_local( const char *no_local );"},"1646":{y:0,u:"../Content/FuncRef/web/lrFr_web_set_secure_proxy.htm",l:-1,t:"web_set_secure_proxy",i:0.000270427275038863,a:"web_set_secure_proxy Specifies that all secure HTTPS requests be directed to the specified secure proxy server. C Language int web_set_secure_proxy( const char *secure_proxy_host_port ); "},"1647":{y:0,u:"../Content/FuncRef/web/lrFR_web_set_sockets_option.htm",l:-1,t:"web_set_sockets_option",i:0.000370468698354598,a:"web_set_sockets_option Sets an option for sockets.  C Language int web_set_sockets_option( const char *option, const char *value ); "},"1648":{y:0,u:"../Content/FuncRef/web/lrFr_web_sjis_to_euc_param.htm",l:-1,t:"web_sjis_to_euc_param",i:0.000227357683579203,a:"web_sjis_to_euc_param"},"1649":{y:0,u:"../Content/FuncRef/web/async/lrFr_web_stop_async.htm",l:-1,t:"web_stop_async",i:0.00020200722850034,a:"web_stop_async"},"1650":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_close.htm",l:-1,t:"web_stream_close",i:0.000472382009097403,a:"Closes a media stream. C Language int web_stream_close( const char *ID, LAST );  Return Values This function returns LR_PASS (0) on success, and LR_FAIL (1) on failure.  Parameterization Standard parameterization is not available for this function. General Information The web_stream_close function ..."},"1651":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_get_param_double.htm",l:-1,t:"web_stream_get_param_double",i:0.000472382009097403,a:"Returns the state of the stream. C Language double web_stream_get_param_double( const char *StreamID, const int StateType );  Return Values Returns the value of the specified parameter. On failure, returns an integer less than 0.  Parameterization Standard parameterization is not available for this ..."},"1652":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_get_param_int.htm",l:-1,t:"web_stream_get_param_int",i:0.000472382009097403,a:"Return the state of the stream. C Language int web_stream_get_param_int( const char *StreamID, const int StateType );  Return Values On failure, returns -1. If StateType is BYTES_RECEIVED, returns the number of bytes. If StateType is CURRENT_STATE, returns one of the following:  Parameterization ..."},"1653":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_get_param_string.htm",l:-1,t:"web_stream_get_param_string",i:0.000472382009097403,a:"Gets the state of the stream and saves it in a parameter. C Language int web_stream_get_param_string( const char *StreamID, const int StateType, const char *ParameterName );  Return Values This function returns LR_PASS (0) on success, and LR_FAIL (1) on failure.  Parameterization Standard ..."},"1654":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_open.htm",l:-1,t:"web_stream_open",i:0.00257369512739919,a:"Opens a media stream. C Language int web_stream_open(\"ID=\u003cstring\u003e\", \"URL=\u003curl\u003e\",  \"Protocol=\u003cprotocol\u003e\", [\"Bandwidth=\u003cn\u003e\"], [\"StreamBufferingTimeout=\u003cseconds\u003e\"], [\"DumpPath=\u003cpath\u003e\"], [\"EventReportCB=\u003cname of function\u003e], LAST);  Return Values This function returns LR_PASS (0) on success, and LR_FAIL ..."},"1655":{y:0,u:"../Content/FuncRef/web/streaming/lrFr_web_stream_pause.htm",l:-1,t:"web_stream_pause",i:0.000472382009097403,a:"Pauses playing a media stream. C Language int web_stream_pause( \"ID=\u003cn\u003e\",  \"PausingDuration=\u003csecs\u003e\", LAST );  Return Values This function returns LR_PASS (0) on success, and LR_FAIL (1) on failure.  Parameterization Standard parameterization is not available for this function. General Information ..."},});